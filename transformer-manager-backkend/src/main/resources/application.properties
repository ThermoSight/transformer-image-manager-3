# spring.application.name=transformer-manager-backkend

# # NEON (ACTIVE - Free PostgreSQL Database)
# spring.datasource.url=jdbc:postgresql://ep-sparkling-sky-ad8pn3sa-pooler.c-2.us-east-1.aws.neon.tech:5432/neondb?sslmode=require
# spring.datasource.username=neondb_owner
# spring.datasource.password=npg_Tx5uAPpEZ3lw

# spring.datasource.driver-class-name=org.postgresql.Driver

# # Connection Configuration for Neon Database
# spring.datasource.hikari.connection-init-sql=SELECT 1
# spring.datasource.hikari.connection-test-query=SELECT 1
# spring.datasource.hikari.maximum-pool-size=5

# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.properties.hibernate.format_sql=true

# spring.servlet.multipart.max-file-size=5MB
# spring.servlet.multipart.max-request-size=5MB

# upload.directory=./uploads

# # Anomaly Analysis Configuration
# app.anomaly.model.path=C:/Users/HP/Desktop/Sem 7/Software Design Competition/transformer-image-manager-3/automatic-anamoly-detection/Model_Inference
# app.anomaly.venv.path=/mnt/c/Users/HP/Desktop/Sem 7/Software Design Competition/transformer-image-manager-3/automatic-anamoly-detection/.venv
# app.anomaly.temp.dir=./temp/anomaly-analysis
# app.anomaly.demo.mode=true

# jwt.secret=mySecretKeyForJWTSigning1234567890
# jwt.expiration=86400 

# # Initialize admin users
# admin.init.enabled=true
# admin.init.users[0].username=admin1
# admin.init.users[0].password=admin1pass
# admin.init.users[0].displayName=Admin One
# admin.init.users[1].username=admin2
# admin.init.users[1].password=admin2pass
# admin.init.users[1].displayName=Admin Two
# admin.init.users[2].username=admin3
# admin.init.users[2].password=admin3pass
# admin.init.users[2].displayName=Admin Three
# admin.init.users[3].username=admin4
# admin.init.users[3].password=admin4pass
# admin.init.users[3].displayName=Admin Four

# # Initialize regular users
# user.init.enabled=true
# user.init.users[0].username=user1
# user.init.users[0].password=user1pass
# user.init.users[0].displayName=User One
# user.init.users[1].username=user2
# user.init.users[1].password=user2pass
# user.init.users[1].displayName=User Two
# user.init.users[2].username=user3
# user.init.users[2].password=user3pass
# user.init.users[2].displayName=User Three
# user.init.users[3].username=user4
# user.init.users[3].password=user4pass
# user.init.users[3].displayName=User Four

# ================================
# App
# ================================
spring.application.name=transformer-manager-backkend

# ================================
# DATA SOURCE (LOCAL - Active)
# ================================
# Assumes: PostgreSQL running on your machine, DB name = transformer_db
# User = postgres, Password = Pg#12345
spring.datasource.url=jdbc:postgresql://localhost:5432/transformer_db
spring.datasource.username=postgres
spring.datasource.password=Pg#12345
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP
spring.datasource.hikari.connection-init-sql=SELECT 1
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# ================================
# FILE UPLOADS
# ================================
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
upload.directory=./uploads

# ================================
# APP-SPECIFIC (keep paths as you had)
# ================================
app.anomaly.model.path=C:/Users/HP/Desktop/Sem 7/Software Design Competition/transformer-image-manager-3/automatic-anamoly-detection/Model_Inference
app.anomaly.venv.path=/mnt/c/Users/HP/Desktop/Sem 7/Software Design Competition/transformer-image-manager-3/automatic-anamoly-detection/.venv

app.anomaly.temp.dir=./temp/anomaly-analysis
app.anomaly.demo.mode=true

# ================================
# SECURITY (JWT)
# ================================
jwt.secret=mySecretKeyForJWTSigning1234567890
jwt.expiration=86400

# ================================
# SEED USERS
# ================================
# Admins
admin.init.enabled=true
admin.init.users[0].username=admin1
admin.init.users[0].password=admin1pass
admin.init.users[0].displayName=Admin One
admin.init.users[1].username=admin2
admin.init.users[1].password=admin2pass
admin.init.users[1].displayName=Admin Two
admin.init.users[2].username=admin3
admin.init.users[2].password=admin3pass
admin.init.users[2].displayName=Admin Three
admin.init.users[3].username=admin4
admin.init.users[3].password=admin4pass
admin.init.users[3].displayName=Admin Four

# Regular users
user.init.enabled=true
user.init.users[0].username=user1
user.init.users[0].password=user1pass
user.init.users[0].displayName=User One
user.init.users[1].username=user2
user.init.users[1].password=user2pass
user.init.users[1].displayName=User Two
user.init.users[2].username=user3
user.init.users[2].password=user3pass
user.init.users[2].displayName=User Three
user.init.users[3].username=user4
user.init.users[3].password=user4pass
user.init.users[3].displayName=User Four

# ================================
# (OPTIONAL) SQL init if you add schema/data scripts under src/main/resources
# ================================
# spring.sql.init.mode=always
# spring.sql.init.continue-on-error=true



# ===================================================================
# NEON (COMMENTED - flip to Neon by uncommenting this whole section)
# ===================================================================
# spring.datasource.url=jdbc:postgresql://ep-sparkling-sky-ad8pn3sa-pooler.c-2.us-east-1.aws.neon.tech:5432/neondb?sslmode=require
# spring.datasource.username=neondb_owner
# spring.datasource.password=npg_Tx5uAPpEZ3lw
# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.datasource.hikari.connection-init-sql=SELECT 1
# spring.datasource.hikari.connection-test-query=SELECT 1
# spring.datasource.hikari.maximum-pool-size=5
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.properties.hibernate.format_sql=true
